SieveModel: rules*=Rule ;

Rule:
  'if' condition=Expression '{'
    actions*=Action[';']
  '}'
;

Expression: Conjunction ('||' Conjunction)*;
Conjunction: Condition ('&&' Condition)*;
Condition:
    StringMatch
    | NumericMatch
    | ExistMatch
;

ExistMatch: op=ExistOperator key=STRING;
ExistOperator: ':exists' | ':notexists';

StringMatch: key=STRING op=StringOperator value=Value;
StringOperator:
  '=='           // compares two whole strings with each other
  | '!='         // test for string inequality
  | ':contains'  // sub-string match
  | '=~'         // match strings according to regular expression
  | '!~'         // inverse match with regular expression
;

NumericMatch: key=STRING op=NumericOperator value=NUMBER;
NumericOperator:
  '=='          // equal
  | '!='        // not equal
  | '<'         // less than
  | '<='        // less than or equal
  | '>'         // greater than
  | '>='        // greater than or equal
;

Value: SingleValue | ValueList ;
SingleValue: value=STRING ;
ValueList: '[' values+=SingleValue[','] ']' ;


Action: FilteringAction | ModificationAction;

FilteringAction:
  'drop' | 'keep'
;

ModificationAction:
    'add' key=STRING '=' value=STRING
    | 'add!' key=STRING '=' value=STRING
    | 'modify' key=STRING '=' value=STRING
    | 'remove' key=STRING
;

Comment:
  /(\/\/.*$)|(\/\*.*\*\/)/  // TODO: // line comments and /* block comments */, figure out the right regex
;